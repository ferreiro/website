extends ./admin.layout.pug
include ../../../UIComponents/mixins/seriesSelector

block extraScripts
    script(src="/js/admin.main.min.js")

    script(src="https://cdn.jsdelivr.net/simplemde/latest/simplemde.min.js")
    script.
        var simplemde = new SimpleMDE({
            element: document.getElementById("composerBody"),
            promptURLs: true,
            tabSize: 4,
            forceSync: true,
            autosave: {
                enabled: true,
                uniqueId: "JorgeFerreiroBlog",
                delay: 2000,
            }
        })
    script.
       window.onbeforeunload = function(evt) {
            var message = 'Did you remember to download your form?';
            if (typeof evt == 'undefined') {
                evt = window.event;
            }
            if (evt) {
                evt.returnValue = message;
            }

            return message;
        }

    //-Update simpleMDE content
    if edit
        input(type="hidden", id="postBody", value= post.body)
        script.
            var data = $('#postBody').val()
            simplemde.value(data)
    else
        script.
            simplemde.value('') // reset when creating a new post.

block content
    style.
        .menu {
            position: absolute; /* making the header not fixed for better writing */
        }

    if error
        div(style="background: red; text-align: center; margin-bottom: 2em; padding: 1.5em;")
            p !{error}

    if success
        div(style="background: green; text-align: center; margin-bottom: 2em; padding: 1.5em;")
            p !{success}

    if edit == true & post == null
        p Post does not exist
    else
        style.
            #headerImageUploaderForm { display: none; }
            #imageUploader { display: none; }

        form#headerImageUploaderForm(class="uploader", action= '/api/v1/upload-image', method='post', enctype="multipart/form-data")
            input.composer__input(type='file', name="image")
            input(type="submit", value="Upload Image", name="submit")

        form#imageUploader(class="uploader", action= '/api/v1/upload-image', method='post', enctype="multipart/form-data")
            input.composer__input(type='file', name="image")
            input(type="submit", value="Upload Image", name="submit")

        div#errorPostCreate(style="width: 100%; padding: 1em 0; display: none; background: #d40f0f; z-index: 100000000; position: fixed; left: 0; bottom: 0;")
            div(style="max-width: 500px; margin: 0 auto; text-align: center; font-size: 1.6em; font-weight: 600; color: #fff;")
                span.successMessage Error creating post

        div#successPostCreate(style="width: 100%; padding: 1.5em 0; display: none; background: #08b908; z-index: 100000000; position: fixed; left: 0; bottom: 0;")
            div(style="max-width: 500px; margin: 0 auto; text-align: center; font-size: 1.6em; font-weight: 600; color: #fff;")
                span.errorMessage Post Created! Hooray!

        div#createPostLoader.loaderCreatePost(style="width: 100%; height: 100%; display: none; z-index: 10000; background:rgba(255, 255, 255, 0.8); position: fixed; top: 0; left: 0;")
            img(src="/images/loading.gif", width="50px", style="position: absolute; margin: -15px; top: 50%; left: 50%;")

        form#createPostForm(method='post', action= (edit==true ? '/admin/edit/' + post.permalink : '/admin/create'))

            .composer.shadow__box
                .composer__entry
                    //-label(for='title', class="composer__legend") Title:
                    textarea.title#title.blogPost__title.composer__title(rows="2", placeholder="Title", name='post_title')= (post && post.title ? post.title : '')
                .composer__entry
                    textarea.summary.blogPost__subtitle.composer__subtitle#summary(rows="3", placeholder="Summary", name='post_summary')= (post && post.summary ? post.summary : '')
                    //label(for='summary', class="composer__legend")
                        span.icon.ion-document-text
                        p Summary
                    //.composer__right
                        textarea#summary.composer__input(type='summary', placeholder="Summary", class="admin__input", name='post_summary')= (post && post.summary ? post.summary : '')

                .composer__entry(style="margin: 0.8em 0; margin-bottom: 1.5em;")
                    //-label(for='pic', class="composer__legend")
                        span.icon.ion-image
                        p Image
                    //.composer__right
                    .headerImage
                        input.composer__input#picInput(style="display: none;", type='name', placeholder="Image", class="admin__input", name='post_pic', value= post && post.pic ? post.pic : '')
                        //-div(style="display:inline-block; min-width: 200px; min-height: 120px; background: #f4f4f4; margin: 15px 0;")
                        img#picImage(src= post && post.pic ? post.pic : '', width="200px")
                        div(style="width: 100%;")
                        img#headerImageUploaderLoading(src="/images/loading.gif", width="30px", style="display: none; margin: 15px 0;")
                        div(style="width: 100%;")
                        a.action_button(id="headerImageUploaderButton", style="margin-top: 5px; margin-bottom: 1em;") Upload Header Image

                .composer__entry
                    textarea#composerBody(type='name', class="admin__textarea", name='post_body')

                .stickyUploader
                    .composer__entry

                        #imageUploaderWrapper(style="margin-bottom: 1em;")
                            img#imageUploaded(src= '', width="200px")
                            div(style="width: 100%;")
                            img#imageUploaderLoader(src="/images/loading.gif", width="30px", style="display: none; margin: 15px 0;")
                            div(style="width: 100%;")
                            span#imageUploadedUrl(style="font-size: 11px; line-height: 12px; margin-top: 1em; overflow-wrap: break-word; text-align: justify;")

                        a.action_button(id="imageUploaderButton", style="margin: 0; float: left; display: inline-block;") Upload Image
                        a.action_button(id="imageUploaderClear", style="margin: 0; float: right; display: inline-block;")
                            span.icon.ion-android-remove

            //-This is not shown to the user
            //-but they are automatically fullfilled
            .composer.shadow__box(style="display: ; margin-top: 2em;")
                h2 Options

                .composer__entry
                    label(for='permalink', class="composer__legend")
                        span.icon.ion-lock-combination
                        p Secret Password
                    .composer__right
                        - secretLink = '/blog/' + (post && post.permalink ? post.permalink : '') + '?secretKey=' + (post && post.secretKey ? post.secretKey : '')
                        if secretLink
                            a(href= secretLink, target="_blank")= secretLink
                        input#permalink.composer__input(type='name', placeholder="Secret key", class="admin__input", name='post_secretKey', value= post && post.secretKey ? post.secretKey : '')

                .composer__entry
                    label(for='permalink', class="composer__legend")
                        span.icon.ion-link
                        p Permalink
                    .composer__right
                        input#permalink.composer__input(type='name', placeholder="Permalink", class="admin__input", name='post_permalink', value= post && post.permalink ? post.permalink : '')

                .composer__entry
                    label(for='author_name', class="composer__legend")
                        span.icon.ion-person
                        p Author
                    .composer__right
                        input#author.composer__input(type='author_name', placeholder="Author Name", class="admin__input", name='post_author_name', value= post && post.author_name ? post.author_name : 'Jorge Ferreiro')

                .composer__entry(style="display: none;")
                    label(for='author_pic', class="composer__legend")
                        span.icon.ion-person
                        p Author pic
                    .composer__right
                        input#author.composer__input(type='author_pic', placeholder="Author Pic", class="admin__input", name='post_author_pic', value= post && post.author_pic ? post.author_pic : '')

            .composer.shadow__box(style="margin-top: 2em;")

                .composer__entry
                    h2 Post Series

                    +seriesSelector()

                .composer__entry
                    h2 Category

                    mixin selectionItem(inputName, inputValue, title)
                        - postCategory = []
                        if post && post.category
                            - postCategory = post.category

                        - isCategorySelected = postCategory.indexOf(inputValue) >= 0
                        .threeColsGrid__item
                            .threeColsGrid__item__wrapper
                                li.selectionBox__item
                                    .selectionBox__left(style="margin-right: 5px;")
                                        .toggleWrapper
                                            input(type="checkbox", id= inputValue, name= inputName, value= inputValue, checked= (isCategorySelected ? true : false))
                                            .toggle
                                                label(for= inputValue)
                                                    i
                                    .selectionBox__right(style="width: 90px; overflow: hidden;")
                                        span= title

                    .threeColsGrid.selectionBox
                        +selectionItem('post_category', 'software', 'Software Eng.')
                        +selectionItem('post_category', 'product', 'Product')
                        +selectionItem('post_category', 'entrepreneurship', ' Entrepreneurship')
                        +selectionItem('post_category', 'event', 'Event')
                        +selectionItem('post_category', 'design', 'Design')

                .composer__entry
                    h2 Privacy

                    .threeColsGrid.selectionBox
                        .threeColsGrid__item
                            .threeColsGrid__item__wrapper
                                li.selectionBox__item
                                    .selectionBox__left
                                        .toggleWrapper
                                            input(type="checkbox", id= 'isPublished', name= 'post_isPublished', checked= (post && post.published ? true : false))
                                            .toggle
                                                label(for= 'isPublished')
                                                    i
                                    .selectionBox__right
                                        span Is published?

                .composer__entry(style="margin: 0; margin-top: 1em;")
                    button.about_resume_button.about_resume_button_view.blogHeader_button(type="submit", style="margin: 0;") Submit post
